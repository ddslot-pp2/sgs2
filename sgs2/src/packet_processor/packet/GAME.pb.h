// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GAME.proto

#ifndef PROTOBUF_GAME_2eproto__INCLUDED
#define PROTOBUF_GAME_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace GAME {
class CS_ENTER_FIELD;
class CS_ENTER_FIELDDefaultTypeInternal;
extern CS_ENTER_FIELDDefaultTypeInternal _CS_ENTER_FIELD_default_instance_;
class CS_LEAVE_FIELD;
class CS_LEAVE_FIELDDefaultTypeInternal;
extern CS_LEAVE_FIELDDefaultTypeInternal _CS_LEAVE_FIELD_default_instance_;
class CS_MOVE_OBJECT;
class CS_MOVE_OBJECTDefaultTypeInternal;
extern CS_MOVE_OBJECTDefaultTypeInternal _CS_MOVE_OBJECT_default_instance_;
class CS_PING;
class CS_PINGDefaultTypeInternal;
extern CS_PINGDefaultTypeInternal _CS_PING_default_instance_;
class CS_USE_SKILL;
class CS_USE_SKILLDefaultTypeInternal;
extern CS_USE_SKILLDefaultTypeInternal _CS_USE_SKILL_default_instance_;
class SC_ENTER_FIELD;
class SC_ENTER_FIELDDefaultTypeInternal;
extern SC_ENTER_FIELDDefaultTypeInternal _SC_ENTER_FIELD_default_instance_;
class SC_NOTI_DESTROY_SKILL;
class SC_NOTI_DESTROY_SKILLDefaultTypeInternal;
extern SC_NOTI_DESTROY_SKILLDefaultTypeInternal _SC_NOTI_DESTROY_SKILL_default_instance_;
class SC_NOTI_ENTER_FIELD;
class SC_NOTI_ENTER_FIELDDefaultTypeInternal;
extern SC_NOTI_ENTER_FIELDDefaultTypeInternal _SC_NOTI_ENTER_FIELD_default_instance_;
class SC_NOTI_LEAVE_FIELD;
class SC_NOTI_LEAVE_FIELDDefaultTypeInternal;
extern SC_NOTI_LEAVE_FIELDDefaultTypeInternal _SC_NOTI_LEAVE_FIELD_default_instance_;
class SC_NOTI_MOVE_OBJECT;
class SC_NOTI_MOVE_OBJECTDefaultTypeInternal;
extern SC_NOTI_MOVE_OBJECTDefaultTypeInternal _SC_NOTI_MOVE_OBJECT_default_instance_;
class SC_NOTI_USE_SKILL;
class SC_NOTI_USE_SKILLDefaultTypeInternal;
extern SC_NOTI_USE_SKILLDefaultTypeInternal _SC_NOTI_USE_SKILL_default_instance_;
class SC_PING;
class SC_PINGDefaultTypeInternal;
extern SC_PINGDefaultTypeInternal _SC_PING_default_instance_;
class USER_INFO;
class USER_INFODefaultTypeInternal;
extern USER_INFODefaultTypeInternal _USER_INFO_default_instance_;
}  // namespace GAME

namespace GAME {

namespace protobuf_GAME_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_GAME_2eproto

// ===================================================================

class USER_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.USER_INFO) */ {
 public:
  USER_INFO();
  virtual ~USER_INFO();

  USER_INFO(const USER_INFO& from);

  inline USER_INFO& operator=(const USER_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const USER_INFO& default_instance();

  static inline const USER_INFO* internal_default_instance() {
    return reinterpret_cast<const USER_INFO*>(
               &_USER_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(USER_INFO* other);

  // implements Message ----------------------------------------------

  inline USER_INFO* New() const PROTOBUF_FINAL { return New(NULL); }

  USER_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const USER_INFO& from);
  void MergeFrom(const USER_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(USER_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // int32 hp = 2;
  void clear_hp();
  static const int kHpFieldNumber = 2;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // float pos_x = 3;
  void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 4;
  void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 5;
  void clear_pos_z();
  static const int kPosZFieldNumber = 5;
  float pos_z() const;
  void set_pos_z(float value);

  // @@protoc_insertion_point(class_scope:GAME.USER_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 key_;
  ::google::protobuf::int32 hp_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ENTER_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_ENTER_FIELD) */ {
 public:
  CS_ENTER_FIELD();
  virtual ~CS_ENTER_FIELD();

  CS_ENTER_FIELD(const CS_ENTER_FIELD& from);

  inline CS_ENTER_FIELD& operator=(const CS_ENTER_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ENTER_FIELD& default_instance();

  static inline const CS_ENTER_FIELD* internal_default_instance() {
    return reinterpret_cast<const CS_ENTER_FIELD*>(
               &_CS_ENTER_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CS_ENTER_FIELD* other);

  // implements Message ----------------------------------------------

  inline CS_ENTER_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ENTER_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ENTER_FIELD& from);
  void MergeFrom(const CS_ENTER_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ENTER_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GAME.CS_ENTER_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ENTER_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_ENTER_FIELD) */ {
 public:
  SC_ENTER_FIELD();
  virtual ~SC_ENTER_FIELD();

  SC_ENTER_FIELD(const SC_ENTER_FIELD& from);

  inline SC_ENTER_FIELD& operator=(const SC_ENTER_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ENTER_FIELD& default_instance();

  static inline const SC_ENTER_FIELD* internal_default_instance() {
    return reinterpret_cast<const SC_ENTER_FIELD*>(
               &_SC_ENTER_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SC_ENTER_FIELD* other);

  // implements Message ----------------------------------------------

  inline SC_ENTER_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ENTER_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ENTER_FIELD& from);
  void MergeFrom(const SC_ENTER_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ENTER_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GAME.USER_INFO user_infos = 7;
  int user_infos_size() const;
  void clear_user_infos();
  static const int kUserInfosFieldNumber = 7;
  const ::GAME::USER_INFO& user_infos(int index) const;
  ::GAME::USER_INFO* mutable_user_infos(int index);
  ::GAME::USER_INFO* add_user_infos();
  ::google::protobuf::RepeatedPtrField< ::GAME::USER_INFO >*
      mutable_user_infos();
  const ::google::protobuf::RepeatedPtrField< ::GAME::USER_INFO >&
      user_infos() const;

  // string ec = 6;
  void clear_ec();
  static const int kEcFieldNumber = 6;
  const ::std::string& ec() const;
  void set_ec(const ::std::string& value);
  #if LANG_CXX11
  void set_ec(::std::string&& value);
  #endif
  void set_ec(const char* value);
  void set_ec(const char* value, size_t size);
  ::std::string* mutable_ec();
  ::std::string* release_ec();
  void set_allocated_ec(::std::string* ec);

  // int64 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // float pos_x = 3;
  void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 4;
  void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 5;
  void clear_pos_z();
  static const int kPosZFieldNumber = 5;
  float pos_z() const;
  void set_pos_z(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_ENTER_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GAME::USER_INFO > user_infos_;
  ::google::protobuf::internal::ArenaStringPtr ec_;
  ::google::protobuf::int64 key_;
  bool result_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_ENTER_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_ENTER_FIELD) */ {
 public:
  SC_NOTI_ENTER_FIELD();
  virtual ~SC_NOTI_ENTER_FIELD();

  SC_NOTI_ENTER_FIELD(const SC_NOTI_ENTER_FIELD& from);

  inline SC_NOTI_ENTER_FIELD& operator=(const SC_NOTI_ENTER_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_ENTER_FIELD& default_instance();

  static inline const SC_NOTI_ENTER_FIELD* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_ENTER_FIELD*>(
               &_SC_NOTI_ENTER_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SC_NOTI_ENTER_FIELD* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_ENTER_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_ENTER_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_ENTER_FIELD& from);
  void MergeFrom(const SC_NOTI_ENTER_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_ENTER_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // int32 hp = 2;
  void clear_hp();
  static const int kHpFieldNumber = 2;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // float pos_x = 3;
  void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 4;
  void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 5;
  void clear_pos_z();
  static const int kPosZFieldNumber = 5;
  float pos_z() const;
  void set_pos_z(float value);

  // int64 timestamp = 6;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_ENTER_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 key_;
  ::google::protobuf::int32 hp_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_LEAVE_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_LEAVE_FIELD) */ {
 public:
  CS_LEAVE_FIELD();
  virtual ~CS_LEAVE_FIELD();

  CS_LEAVE_FIELD(const CS_LEAVE_FIELD& from);

  inline CS_LEAVE_FIELD& operator=(const CS_LEAVE_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LEAVE_FIELD& default_instance();

  static inline const CS_LEAVE_FIELD* internal_default_instance() {
    return reinterpret_cast<const CS_LEAVE_FIELD*>(
               &_CS_LEAVE_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CS_LEAVE_FIELD* other);

  // implements Message ----------------------------------------------

  inline CS_LEAVE_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_LEAVE_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_LEAVE_FIELD& from);
  void MergeFrom(const CS_LEAVE_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_LEAVE_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.CS_LEAVE_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 key_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_LEAVE_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_LEAVE_FIELD) */ {
 public:
  SC_NOTI_LEAVE_FIELD();
  virtual ~SC_NOTI_LEAVE_FIELD();

  SC_NOTI_LEAVE_FIELD(const SC_NOTI_LEAVE_FIELD& from);

  inline SC_NOTI_LEAVE_FIELD& operator=(const SC_NOTI_LEAVE_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_LEAVE_FIELD& default_instance();

  static inline const SC_NOTI_LEAVE_FIELD* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_LEAVE_FIELD*>(
               &_SC_NOTI_LEAVE_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SC_NOTI_LEAVE_FIELD* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_LEAVE_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_LEAVE_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_LEAVE_FIELD& from);
  void MergeFrom(const SC_NOTI_LEAVE_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_LEAVE_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_LEAVE_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 key_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_MOVE_OBJECT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_MOVE_OBJECT) */ {
 public:
  CS_MOVE_OBJECT();
  virtual ~CS_MOVE_OBJECT();

  CS_MOVE_OBJECT(const CS_MOVE_OBJECT& from);

  inline CS_MOVE_OBJECT& operator=(const CS_MOVE_OBJECT& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_MOVE_OBJECT& default_instance();

  static inline const CS_MOVE_OBJECT* internal_default_instance() {
    return reinterpret_cast<const CS_MOVE_OBJECT*>(
               &_CS_MOVE_OBJECT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CS_MOVE_OBJECT* other);

  // implements Message ----------------------------------------------

  inline CS_MOVE_OBJECT* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_MOVE_OBJECT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_MOVE_OBJECT& from);
  void MergeFrom(const CS_MOVE_OBJECT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_MOVE_OBJECT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float pos_x = 1;
  void clear_pos_x();
  static const int kPosXFieldNumber = 1;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 2;
  void clear_pos_y();
  static const int kPosYFieldNumber = 2;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 3;
  void clear_pos_z();
  static const int kPosZFieldNumber = 3;
  float pos_z() const;
  void set_pos_z(float value);

  // float rot_x = 4;
  void clear_rot_x();
  static const int kRotXFieldNumber = 4;
  float rot_x() const;
  void set_rot_x(float value);

  // float rot_y = 5;
  void clear_rot_y();
  static const int kRotYFieldNumber = 5;
  float rot_y() const;
  void set_rot_y(float value);

  // float rot_z = 6;
  void clear_rot_z();
  static const int kRotZFieldNumber = 6;
  float rot_z() const;
  void set_rot_z(float value);

  // int64 timestamp = 8;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 8;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // float rot_w = 7;
  void clear_rot_w();
  static const int kRotWFieldNumber = 7;
  float rot_w() const;
  void set_rot_w(float value);

  // @@protoc_insertion_point(class_scope:GAME.CS_MOVE_OBJECT)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float rot_x_;
  float rot_y_;
  float rot_z_;
  ::google::protobuf::int64 timestamp_;
  float rot_w_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_MOVE_OBJECT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_MOVE_OBJECT) */ {
 public:
  SC_NOTI_MOVE_OBJECT();
  virtual ~SC_NOTI_MOVE_OBJECT();

  SC_NOTI_MOVE_OBJECT(const SC_NOTI_MOVE_OBJECT& from);

  inline SC_NOTI_MOVE_OBJECT& operator=(const SC_NOTI_MOVE_OBJECT& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_MOVE_OBJECT& default_instance();

  static inline const SC_NOTI_MOVE_OBJECT* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_MOVE_OBJECT*>(
               &_SC_NOTI_MOVE_OBJECT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SC_NOTI_MOVE_OBJECT* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_MOVE_OBJECT* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_MOVE_OBJECT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_MOVE_OBJECT& from);
  void MergeFrom(const SC_NOTI_MOVE_OBJECT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_MOVE_OBJECT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // float pos_x = 2;
  void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 3;
  void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 4;
  void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  float pos_z() const;
  void set_pos_z(float value);

  // float rot_x = 5;
  void clear_rot_x();
  static const int kRotXFieldNumber = 5;
  float rot_x() const;
  void set_rot_x(float value);

  // float rot_y = 6;
  void clear_rot_y();
  static const int kRotYFieldNumber = 6;
  float rot_y() const;
  void set_rot_y(float value);

  // float rot_z = 7;
  void clear_rot_z();
  static const int kRotZFieldNumber = 7;
  float rot_z() const;
  void set_rot_z(float value);

  // int64 timestamp = 9;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 9;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // float rot_w = 8;
  void clear_rot_w();
  static const int kRotWFieldNumber = 8;
  float rot_w() const;
  void set_rot_w(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_MOVE_OBJECT)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 key_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float rot_x_;
  float rot_y_;
  float rot_z_;
  ::google::protobuf::int64 timestamp_;
  float rot_w_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_USE_SKILL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_USE_SKILL) */ {
 public:
  CS_USE_SKILL();
  virtual ~CS_USE_SKILL();

  CS_USE_SKILL(const CS_USE_SKILL& from);

  inline CS_USE_SKILL& operator=(const CS_USE_SKILL& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_USE_SKILL& default_instance();

  static inline const CS_USE_SKILL* internal_default_instance() {
    return reinterpret_cast<const CS_USE_SKILL*>(
               &_CS_USE_SKILL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CS_USE_SKILL* other);

  // implements Message ----------------------------------------------

  inline CS_USE_SKILL* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_USE_SKILL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_USE_SKILL& from);
  void MergeFrom(const CS_USE_SKILL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_USE_SKILL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 skill_id = 1;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  ::google::protobuf::int32 skill_id() const;
  void set_skill_id(::google::protobuf::int32 value);

  // float forward_x = 2;
  void clear_forward_x();
  static const int kForwardXFieldNumber = 2;
  float forward_x() const;
  void set_forward_x(float value);

  // float forward_y = 3;
  void clear_forward_y();
  static const int kForwardYFieldNumber = 3;
  float forward_y() const;
  void set_forward_y(float value);

  // float forward_z = 4;
  void clear_forward_z();
  static const int kForwardZFieldNumber = 4;
  float forward_z() const;
  void set_forward_z(float value);

  // float rot_x = 5;
  void clear_rot_x();
  static const int kRotXFieldNumber = 5;
  float rot_x() const;
  void set_rot_x(float value);

  // float rot_y = 6;
  void clear_rot_y();
  static const int kRotYFieldNumber = 6;
  float rot_y() const;
  void set_rot_y(float value);

  // float rot_z = 7;
  void clear_rot_z();
  static const int kRotZFieldNumber = 7;
  float rot_z() const;
  void set_rot_z(float value);

  // float rot_w = 8;
  void clear_rot_w();
  static const int kRotWFieldNumber = 8;
  float rot_w() const;
  void set_rot_w(float value);

  // @@protoc_insertion_point(class_scope:GAME.CS_USE_SKILL)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 skill_id_;
  float forward_x_;
  float forward_y_;
  float forward_z_;
  float rot_x_;
  float rot_y_;
  float rot_z_;
  float rot_w_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_USE_SKILL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_USE_SKILL) */ {
 public:
  SC_NOTI_USE_SKILL();
  virtual ~SC_NOTI_USE_SKILL();

  SC_NOTI_USE_SKILL(const SC_NOTI_USE_SKILL& from);

  inline SC_NOTI_USE_SKILL& operator=(const SC_NOTI_USE_SKILL& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_USE_SKILL& default_instance();

  static inline const SC_NOTI_USE_SKILL* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_USE_SKILL*>(
               &_SC_NOTI_USE_SKILL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SC_NOTI_USE_SKILL* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_USE_SKILL* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_USE_SKILL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_USE_SKILL& from);
  void MergeFrom(const SC_NOTI_USE_SKILL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_USE_SKILL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // int64 skill_key = 2;
  void clear_skill_key();
  static const int kSkillKeyFieldNumber = 2;
  ::google::protobuf::int64 skill_key() const;
  void set_skill_key(::google::protobuf::int64 value);

  // int32 skill_id = 3;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 3;
  ::google::protobuf::int32 skill_id() const;
  void set_skill_id(::google::protobuf::int32 value);

  // float pos_x = 4;
  void clear_pos_x();
  static const int kPosXFieldNumber = 4;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 5;
  void clear_pos_y();
  static const int kPosYFieldNumber = 5;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 6;
  void clear_pos_z();
  static const int kPosZFieldNumber = 6;
  float pos_z() const;
  void set_pos_z(float value);

  // float forward_x = 7;
  void clear_forward_x();
  static const int kForwardXFieldNumber = 7;
  float forward_x() const;
  void set_forward_x(float value);

  // float forward_y = 8;
  void clear_forward_y();
  static const int kForwardYFieldNumber = 8;
  float forward_y() const;
  void set_forward_y(float value);

  // float forward_z = 9;
  void clear_forward_z();
  static const int kForwardZFieldNumber = 9;
  float forward_z() const;
  void set_forward_z(float value);

  // float rot_x = 10;
  void clear_rot_x();
  static const int kRotXFieldNumber = 10;
  float rot_x() const;
  void set_rot_x(float value);

  // float rot_y = 11;
  void clear_rot_y();
  static const int kRotYFieldNumber = 11;
  float rot_y() const;
  void set_rot_y(float value);

  // float rot_z = 12;
  void clear_rot_z();
  static const int kRotZFieldNumber = 12;
  float rot_z() const;
  void set_rot_z(float value);

  // float rot_w = 13;
  void clear_rot_w();
  static const int kRotWFieldNumber = 13;
  float rot_w() const;
  void set_rot_w(float value);

  // float distance = 14;
  void clear_distance();
  static const int kDistanceFieldNumber = 14;
  float distance() const;
  void set_distance(float value);

  // float speed = 15;
  void clear_speed();
  static const int kSpeedFieldNumber = 15;
  float speed() const;
  void set_speed(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_USE_SKILL)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 key_;
  ::google::protobuf::int64 skill_key_;
  ::google::protobuf::int32 skill_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float forward_x_;
  float forward_y_;
  float forward_z_;
  float rot_x_;
  float rot_y_;
  float rot_z_;
  float rot_w_;
  float distance_;
  float speed_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_DESTROY_SKILL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_DESTROY_SKILL) */ {
 public:
  SC_NOTI_DESTROY_SKILL();
  virtual ~SC_NOTI_DESTROY_SKILL();

  SC_NOTI_DESTROY_SKILL(const SC_NOTI_DESTROY_SKILL& from);

  inline SC_NOTI_DESTROY_SKILL& operator=(const SC_NOTI_DESTROY_SKILL& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_DESTROY_SKILL& default_instance();

  static inline const SC_NOTI_DESTROY_SKILL* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_DESTROY_SKILL*>(
               &_SC_NOTI_DESTROY_SKILL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SC_NOTI_DESTROY_SKILL* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_DESTROY_SKILL* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_DESTROY_SKILL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_DESTROY_SKILL& from);
  void MergeFrom(const SC_NOTI_DESTROY_SKILL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_DESTROY_SKILL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 skill_key = 1;
  void clear_skill_key();
  static const int kSkillKeyFieldNumber = 1;
  ::google::protobuf::int64 skill_key() const;
  void set_skill_key(::google::protobuf::int64 value);

  // int64 target_key = 2;
  void clear_target_key();
  static const int kTargetKeyFieldNumber = 2;
  ::google::protobuf::int64 target_key() const;
  void set_target_key(::google::protobuf::int64 value);

  // float damage = 3;
  void clear_damage();
  static const int kDamageFieldNumber = 3;
  float damage() const;
  void set_damage(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_DESTROY_SKILL)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 skill_key_;
  ::google::protobuf::int64 target_key_;
  float damage_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_PING : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_PING) */ {
 public:
  CS_PING();
  virtual ~CS_PING();

  CS_PING(const CS_PING& from);

  inline CS_PING& operator=(const CS_PING& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_PING& default_instance();

  static inline const CS_PING* internal_default_instance() {
    return reinterpret_cast<const CS_PING*>(
               &_CS_PING_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CS_PING* other);

  // implements Message ----------------------------------------------

  inline CS_PING* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_PING* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_PING& from);
  void MergeFrom(const CS_PING& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_PING* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.CS_PING)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_PING : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_PING) */ {
 public:
  SC_PING();
  virtual ~SC_PING();

  SC_PING(const SC_PING& from);

  inline SC_PING& operator=(const SC_PING& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_PING& default_instance();

  static inline const SC_PING* internal_default_instance() {
    return reinterpret_cast<const SC_PING*>(
               &_SC_PING_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SC_PING* other);

  // implements Message ----------------------------------------------

  inline SC_PING* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_PING* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_PING& from);
  void MergeFrom(const SC_PING& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_PING* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.SC_PING)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// USER_INFO

// int64 key = 1;
inline void USER_INFO::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 USER_INFO::key() const {
  // @@protoc_insertion_point(field_get:GAME.USER_INFO.key)
  return key_;
}
inline void USER_INFO::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:GAME.USER_INFO.key)
}

// int32 hp = 2;
inline void USER_INFO::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 USER_INFO::hp() const {
  // @@protoc_insertion_point(field_get:GAME.USER_INFO.hp)
  return hp_;
}
inline void USER_INFO::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.USER_INFO.hp)
}

// float pos_x = 3;
inline void USER_INFO::clear_pos_x() {
  pos_x_ = 0;
}
inline float USER_INFO::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.USER_INFO.pos_x)
  return pos_x_;
}
inline void USER_INFO::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.USER_INFO.pos_x)
}

// float pos_y = 4;
inline void USER_INFO::clear_pos_y() {
  pos_y_ = 0;
}
inline float USER_INFO::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.USER_INFO.pos_y)
  return pos_y_;
}
inline void USER_INFO::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.USER_INFO.pos_y)
}

// float pos_z = 5;
inline void USER_INFO::clear_pos_z() {
  pos_z_ = 0;
}
inline float USER_INFO::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.USER_INFO.pos_z)
  return pos_z_;
}
inline void USER_INFO::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.USER_INFO.pos_z)
}

// -------------------------------------------------------------------

// CS_ENTER_FIELD

// -------------------------------------------------------------------

// SC_ENTER_FIELD

// bool result = 1;
inline void SC_ENTER_FIELD::clear_result() {
  result_ = false;
}
inline bool SC_ENTER_FIELD::result() const {
  // @@protoc_insertion_point(field_get:GAME.SC_ENTER_FIELD.result)
  return result_;
}
inline void SC_ENTER_FIELD::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_ENTER_FIELD.result)
}

// int64 key = 2;
inline void SC_ENTER_FIELD::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_ENTER_FIELD::key() const {
  // @@protoc_insertion_point(field_get:GAME.SC_ENTER_FIELD.key)
  return key_;
}
inline void SC_ENTER_FIELD::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_ENTER_FIELD.key)
}

// float pos_x = 3;
inline void SC_ENTER_FIELD::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_ENTER_FIELD::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_ENTER_FIELD.pos_x)
  return pos_x_;
}
inline void SC_ENTER_FIELD::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_ENTER_FIELD.pos_x)
}

// float pos_y = 4;
inline void SC_ENTER_FIELD::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_ENTER_FIELD::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_ENTER_FIELD.pos_y)
  return pos_y_;
}
inline void SC_ENTER_FIELD::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_ENTER_FIELD.pos_y)
}

// float pos_z = 5;
inline void SC_ENTER_FIELD::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_ENTER_FIELD::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_ENTER_FIELD.pos_z)
  return pos_z_;
}
inline void SC_ENTER_FIELD::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_ENTER_FIELD.pos_z)
}

// string ec = 6;
inline void SC_ENTER_FIELD::clear_ec() {
  ec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SC_ENTER_FIELD::ec() const {
  // @@protoc_insertion_point(field_get:GAME.SC_ENTER_FIELD.ec)
  return ec_.GetNoArena();
}
inline void SC_ENTER_FIELD::set_ec(const ::std::string& value) {
  
  ec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GAME.SC_ENTER_FIELD.ec)
}
#if LANG_CXX11
inline void SC_ENTER_FIELD::set_ec(::std::string&& value) {
  
  ec_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GAME.SC_ENTER_FIELD.ec)
}
#endif
inline void SC_ENTER_FIELD::set_ec(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GAME.SC_ENTER_FIELD.ec)
}
inline void SC_ENTER_FIELD::set_ec(const char* value, size_t size) {
  
  ec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GAME.SC_ENTER_FIELD.ec)
}
inline ::std::string* SC_ENTER_FIELD::mutable_ec() {
  
  // @@protoc_insertion_point(field_mutable:GAME.SC_ENTER_FIELD.ec)
  return ec_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ENTER_FIELD::release_ec() {
  // @@protoc_insertion_point(field_release:GAME.SC_ENTER_FIELD.ec)
  
  return ec_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ENTER_FIELD::set_allocated_ec(::std::string* ec) {
  if (ec != NULL) {
    
  } else {
    
  }
  ec_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ec);
  // @@protoc_insertion_point(field_set_allocated:GAME.SC_ENTER_FIELD.ec)
}

// repeated .GAME.USER_INFO user_infos = 7;
inline int SC_ENTER_FIELD::user_infos_size() const {
  return user_infos_.size();
}
inline void SC_ENTER_FIELD::clear_user_infos() {
  user_infos_.Clear();
}
inline const ::GAME::USER_INFO& SC_ENTER_FIELD::user_infos(int index) const {
  // @@protoc_insertion_point(field_get:GAME.SC_ENTER_FIELD.user_infos)
  return user_infos_.Get(index);
}
inline ::GAME::USER_INFO* SC_ENTER_FIELD::mutable_user_infos(int index) {
  // @@protoc_insertion_point(field_mutable:GAME.SC_ENTER_FIELD.user_infos)
  return user_infos_.Mutable(index);
}
inline ::GAME::USER_INFO* SC_ENTER_FIELD::add_user_infos() {
  // @@protoc_insertion_point(field_add:GAME.SC_ENTER_FIELD.user_infos)
  return user_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GAME::USER_INFO >*
SC_ENTER_FIELD::mutable_user_infos() {
  // @@protoc_insertion_point(field_mutable_list:GAME.SC_ENTER_FIELD.user_infos)
  return &user_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GAME::USER_INFO >&
SC_ENTER_FIELD::user_infos() const {
  // @@protoc_insertion_point(field_list:GAME.SC_ENTER_FIELD.user_infos)
  return user_infos_;
}

// -------------------------------------------------------------------

// SC_NOTI_ENTER_FIELD

// int64 key = 1;
inline void SC_NOTI_ENTER_FIELD::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_ENTER_FIELD::key() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_ENTER_FIELD.key)
  return key_;
}
inline void SC_NOTI_ENTER_FIELD::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_ENTER_FIELD.key)
}

// int32 hp = 2;
inline void SC_NOTI_ENTER_FIELD::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_ENTER_FIELD::hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_ENTER_FIELD.hp)
  return hp_;
}
inline void SC_NOTI_ENTER_FIELD::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_ENTER_FIELD.hp)
}

// float pos_x = 3;
inline void SC_NOTI_ENTER_FIELD::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_NOTI_ENTER_FIELD::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_ENTER_FIELD.pos_x)
  return pos_x_;
}
inline void SC_NOTI_ENTER_FIELD::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_ENTER_FIELD.pos_x)
}

// float pos_y = 4;
inline void SC_NOTI_ENTER_FIELD::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_NOTI_ENTER_FIELD::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_ENTER_FIELD.pos_y)
  return pos_y_;
}
inline void SC_NOTI_ENTER_FIELD::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_ENTER_FIELD.pos_y)
}

// float pos_z = 5;
inline void SC_NOTI_ENTER_FIELD::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_NOTI_ENTER_FIELD::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_ENTER_FIELD.pos_z)
  return pos_z_;
}
inline void SC_NOTI_ENTER_FIELD::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_ENTER_FIELD.pos_z)
}

// int64 timestamp = 6;
inline void SC_NOTI_ENTER_FIELD::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_ENTER_FIELD::timestamp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_ENTER_FIELD.timestamp)
  return timestamp_;
}
inline void SC_NOTI_ENTER_FIELD::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_ENTER_FIELD.timestamp)
}

// -------------------------------------------------------------------

// CS_LEAVE_FIELD

// int64 key = 1;
inline void CS_LEAVE_FIELD::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CS_LEAVE_FIELD::key() const {
  // @@protoc_insertion_point(field_get:GAME.CS_LEAVE_FIELD.key)
  return key_;
}
inline void CS_LEAVE_FIELD::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_LEAVE_FIELD.key)
}

// -------------------------------------------------------------------

// SC_NOTI_LEAVE_FIELD

// int64 key = 1;
inline void SC_NOTI_LEAVE_FIELD::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_LEAVE_FIELD::key() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_LEAVE_FIELD.key)
  return key_;
}
inline void SC_NOTI_LEAVE_FIELD::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_LEAVE_FIELD.key)
}

// -------------------------------------------------------------------

// CS_MOVE_OBJECT

// float pos_x = 1;
inline void CS_MOVE_OBJECT::clear_pos_x() {
  pos_x_ = 0;
}
inline float CS_MOVE_OBJECT::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.CS_MOVE_OBJECT.pos_x)
  return pos_x_;
}
inline void CS_MOVE_OBJECT::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_MOVE_OBJECT.pos_x)
}

// float pos_y = 2;
inline void CS_MOVE_OBJECT::clear_pos_y() {
  pos_y_ = 0;
}
inline float CS_MOVE_OBJECT::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.CS_MOVE_OBJECT.pos_y)
  return pos_y_;
}
inline void CS_MOVE_OBJECT::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_MOVE_OBJECT.pos_y)
}

// float pos_z = 3;
inline void CS_MOVE_OBJECT::clear_pos_z() {
  pos_z_ = 0;
}
inline float CS_MOVE_OBJECT::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.CS_MOVE_OBJECT.pos_z)
  return pos_z_;
}
inline void CS_MOVE_OBJECT::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_MOVE_OBJECT.pos_z)
}

// float rot_x = 4;
inline void CS_MOVE_OBJECT::clear_rot_x() {
  rot_x_ = 0;
}
inline float CS_MOVE_OBJECT::rot_x() const {
  // @@protoc_insertion_point(field_get:GAME.CS_MOVE_OBJECT.rot_x)
  return rot_x_;
}
inline void CS_MOVE_OBJECT::set_rot_x(float value) {
  
  rot_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_MOVE_OBJECT.rot_x)
}

// float rot_y = 5;
inline void CS_MOVE_OBJECT::clear_rot_y() {
  rot_y_ = 0;
}
inline float CS_MOVE_OBJECT::rot_y() const {
  // @@protoc_insertion_point(field_get:GAME.CS_MOVE_OBJECT.rot_y)
  return rot_y_;
}
inline void CS_MOVE_OBJECT::set_rot_y(float value) {
  
  rot_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_MOVE_OBJECT.rot_y)
}

// float rot_z = 6;
inline void CS_MOVE_OBJECT::clear_rot_z() {
  rot_z_ = 0;
}
inline float CS_MOVE_OBJECT::rot_z() const {
  // @@protoc_insertion_point(field_get:GAME.CS_MOVE_OBJECT.rot_z)
  return rot_z_;
}
inline void CS_MOVE_OBJECT::set_rot_z(float value) {
  
  rot_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_MOVE_OBJECT.rot_z)
}

// float rot_w = 7;
inline void CS_MOVE_OBJECT::clear_rot_w() {
  rot_w_ = 0;
}
inline float CS_MOVE_OBJECT::rot_w() const {
  // @@protoc_insertion_point(field_get:GAME.CS_MOVE_OBJECT.rot_w)
  return rot_w_;
}
inline void CS_MOVE_OBJECT::set_rot_w(float value) {
  
  rot_w_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_MOVE_OBJECT.rot_w)
}

// int64 timestamp = 8;
inline void CS_MOVE_OBJECT::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CS_MOVE_OBJECT::timestamp() const {
  // @@protoc_insertion_point(field_get:GAME.CS_MOVE_OBJECT.timestamp)
  return timestamp_;
}
inline void CS_MOVE_OBJECT::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_MOVE_OBJECT.timestamp)
}

// -------------------------------------------------------------------

// SC_NOTI_MOVE_OBJECT

// int64 key = 1;
inline void SC_NOTI_MOVE_OBJECT::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_MOVE_OBJECT::key() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.key)
  return key_;
}
inline void SC_NOTI_MOVE_OBJECT::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.key)
}

// float pos_x = 2;
inline void SC_NOTI_MOVE_OBJECT::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_NOTI_MOVE_OBJECT::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.pos_x)
  return pos_x_;
}
inline void SC_NOTI_MOVE_OBJECT::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.pos_x)
}

// float pos_y = 3;
inline void SC_NOTI_MOVE_OBJECT::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_NOTI_MOVE_OBJECT::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.pos_y)
  return pos_y_;
}
inline void SC_NOTI_MOVE_OBJECT::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.pos_y)
}

// float pos_z = 4;
inline void SC_NOTI_MOVE_OBJECT::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_NOTI_MOVE_OBJECT::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.pos_z)
  return pos_z_;
}
inline void SC_NOTI_MOVE_OBJECT::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.pos_z)
}

// float rot_x = 5;
inline void SC_NOTI_MOVE_OBJECT::clear_rot_x() {
  rot_x_ = 0;
}
inline float SC_NOTI_MOVE_OBJECT::rot_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.rot_x)
  return rot_x_;
}
inline void SC_NOTI_MOVE_OBJECT::set_rot_x(float value) {
  
  rot_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.rot_x)
}

// float rot_y = 6;
inline void SC_NOTI_MOVE_OBJECT::clear_rot_y() {
  rot_y_ = 0;
}
inline float SC_NOTI_MOVE_OBJECT::rot_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.rot_y)
  return rot_y_;
}
inline void SC_NOTI_MOVE_OBJECT::set_rot_y(float value) {
  
  rot_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.rot_y)
}

// float rot_z = 7;
inline void SC_NOTI_MOVE_OBJECT::clear_rot_z() {
  rot_z_ = 0;
}
inline float SC_NOTI_MOVE_OBJECT::rot_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.rot_z)
  return rot_z_;
}
inline void SC_NOTI_MOVE_OBJECT::set_rot_z(float value) {
  
  rot_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.rot_z)
}

// float rot_w = 8;
inline void SC_NOTI_MOVE_OBJECT::clear_rot_w() {
  rot_w_ = 0;
}
inline float SC_NOTI_MOVE_OBJECT::rot_w() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.rot_w)
  return rot_w_;
}
inline void SC_NOTI_MOVE_OBJECT::set_rot_w(float value) {
  
  rot_w_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.rot_w)
}

// int64 timestamp = 9;
inline void SC_NOTI_MOVE_OBJECT::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_MOVE_OBJECT::timestamp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_MOVE_OBJECT.timestamp)
  return timestamp_;
}
inline void SC_NOTI_MOVE_OBJECT::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_MOVE_OBJECT.timestamp)
}

// -------------------------------------------------------------------

// CS_USE_SKILL

// int32 skill_id = 1;
inline void CS_USE_SKILL::clear_skill_id() {
  skill_id_ = 0;
}
inline ::google::protobuf::int32 CS_USE_SKILL::skill_id() const {
  // @@protoc_insertion_point(field_get:GAME.CS_USE_SKILL.skill_id)
  return skill_id_;
}
inline void CS_USE_SKILL::set_skill_id(::google::protobuf::int32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_USE_SKILL.skill_id)
}

// float forward_x = 2;
inline void CS_USE_SKILL::clear_forward_x() {
  forward_x_ = 0;
}
inline float CS_USE_SKILL::forward_x() const {
  // @@protoc_insertion_point(field_get:GAME.CS_USE_SKILL.forward_x)
  return forward_x_;
}
inline void CS_USE_SKILL::set_forward_x(float value) {
  
  forward_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_USE_SKILL.forward_x)
}

// float forward_y = 3;
inline void CS_USE_SKILL::clear_forward_y() {
  forward_y_ = 0;
}
inline float CS_USE_SKILL::forward_y() const {
  // @@protoc_insertion_point(field_get:GAME.CS_USE_SKILL.forward_y)
  return forward_y_;
}
inline void CS_USE_SKILL::set_forward_y(float value) {
  
  forward_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_USE_SKILL.forward_y)
}

// float forward_z = 4;
inline void CS_USE_SKILL::clear_forward_z() {
  forward_z_ = 0;
}
inline float CS_USE_SKILL::forward_z() const {
  // @@protoc_insertion_point(field_get:GAME.CS_USE_SKILL.forward_z)
  return forward_z_;
}
inline void CS_USE_SKILL::set_forward_z(float value) {
  
  forward_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_USE_SKILL.forward_z)
}

// float rot_x = 5;
inline void CS_USE_SKILL::clear_rot_x() {
  rot_x_ = 0;
}
inline float CS_USE_SKILL::rot_x() const {
  // @@protoc_insertion_point(field_get:GAME.CS_USE_SKILL.rot_x)
  return rot_x_;
}
inline void CS_USE_SKILL::set_rot_x(float value) {
  
  rot_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_USE_SKILL.rot_x)
}

// float rot_y = 6;
inline void CS_USE_SKILL::clear_rot_y() {
  rot_y_ = 0;
}
inline float CS_USE_SKILL::rot_y() const {
  // @@protoc_insertion_point(field_get:GAME.CS_USE_SKILL.rot_y)
  return rot_y_;
}
inline void CS_USE_SKILL::set_rot_y(float value) {
  
  rot_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_USE_SKILL.rot_y)
}

// float rot_z = 7;
inline void CS_USE_SKILL::clear_rot_z() {
  rot_z_ = 0;
}
inline float CS_USE_SKILL::rot_z() const {
  // @@protoc_insertion_point(field_get:GAME.CS_USE_SKILL.rot_z)
  return rot_z_;
}
inline void CS_USE_SKILL::set_rot_z(float value) {
  
  rot_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_USE_SKILL.rot_z)
}

// float rot_w = 8;
inline void CS_USE_SKILL::clear_rot_w() {
  rot_w_ = 0;
}
inline float CS_USE_SKILL::rot_w() const {
  // @@protoc_insertion_point(field_get:GAME.CS_USE_SKILL.rot_w)
  return rot_w_;
}
inline void CS_USE_SKILL::set_rot_w(float value) {
  
  rot_w_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_USE_SKILL.rot_w)
}

// -------------------------------------------------------------------

// SC_NOTI_USE_SKILL

// int64 key = 1;
inline void SC_NOTI_USE_SKILL::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_USE_SKILL::key() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.key)
  return key_;
}
inline void SC_NOTI_USE_SKILL::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.key)
}

// int64 skill_key = 2;
inline void SC_NOTI_USE_SKILL::clear_skill_key() {
  skill_key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_USE_SKILL::skill_key() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.skill_key)
  return skill_key_;
}
inline void SC_NOTI_USE_SKILL::set_skill_key(::google::protobuf::int64 value) {
  
  skill_key_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.skill_key)
}

// int32 skill_id = 3;
inline void SC_NOTI_USE_SKILL::clear_skill_id() {
  skill_id_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_USE_SKILL::skill_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.skill_id)
  return skill_id_;
}
inline void SC_NOTI_USE_SKILL::set_skill_id(::google::protobuf::int32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.skill_id)
}

// float pos_x = 4;
inline void SC_NOTI_USE_SKILL::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_NOTI_USE_SKILL::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.pos_x)
  return pos_x_;
}
inline void SC_NOTI_USE_SKILL::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.pos_x)
}

// float pos_y = 5;
inline void SC_NOTI_USE_SKILL::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_NOTI_USE_SKILL::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.pos_y)
  return pos_y_;
}
inline void SC_NOTI_USE_SKILL::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.pos_y)
}

// float pos_z = 6;
inline void SC_NOTI_USE_SKILL::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_NOTI_USE_SKILL::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.pos_z)
  return pos_z_;
}
inline void SC_NOTI_USE_SKILL::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.pos_z)
}

// float forward_x = 7;
inline void SC_NOTI_USE_SKILL::clear_forward_x() {
  forward_x_ = 0;
}
inline float SC_NOTI_USE_SKILL::forward_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.forward_x)
  return forward_x_;
}
inline void SC_NOTI_USE_SKILL::set_forward_x(float value) {
  
  forward_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.forward_x)
}

// float forward_y = 8;
inline void SC_NOTI_USE_SKILL::clear_forward_y() {
  forward_y_ = 0;
}
inline float SC_NOTI_USE_SKILL::forward_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.forward_y)
  return forward_y_;
}
inline void SC_NOTI_USE_SKILL::set_forward_y(float value) {
  
  forward_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.forward_y)
}

// float forward_z = 9;
inline void SC_NOTI_USE_SKILL::clear_forward_z() {
  forward_z_ = 0;
}
inline float SC_NOTI_USE_SKILL::forward_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.forward_z)
  return forward_z_;
}
inline void SC_NOTI_USE_SKILL::set_forward_z(float value) {
  
  forward_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.forward_z)
}

// float rot_x = 10;
inline void SC_NOTI_USE_SKILL::clear_rot_x() {
  rot_x_ = 0;
}
inline float SC_NOTI_USE_SKILL::rot_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.rot_x)
  return rot_x_;
}
inline void SC_NOTI_USE_SKILL::set_rot_x(float value) {
  
  rot_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.rot_x)
}

// float rot_y = 11;
inline void SC_NOTI_USE_SKILL::clear_rot_y() {
  rot_y_ = 0;
}
inline float SC_NOTI_USE_SKILL::rot_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.rot_y)
  return rot_y_;
}
inline void SC_NOTI_USE_SKILL::set_rot_y(float value) {
  
  rot_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.rot_y)
}

// float rot_z = 12;
inline void SC_NOTI_USE_SKILL::clear_rot_z() {
  rot_z_ = 0;
}
inline float SC_NOTI_USE_SKILL::rot_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.rot_z)
  return rot_z_;
}
inline void SC_NOTI_USE_SKILL::set_rot_z(float value) {
  
  rot_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.rot_z)
}

// float rot_w = 13;
inline void SC_NOTI_USE_SKILL::clear_rot_w() {
  rot_w_ = 0;
}
inline float SC_NOTI_USE_SKILL::rot_w() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.rot_w)
  return rot_w_;
}
inline void SC_NOTI_USE_SKILL::set_rot_w(float value) {
  
  rot_w_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.rot_w)
}

// float distance = 14;
inline void SC_NOTI_USE_SKILL::clear_distance() {
  distance_ = 0;
}
inline float SC_NOTI_USE_SKILL::distance() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.distance)
  return distance_;
}
inline void SC_NOTI_USE_SKILL::set_distance(float value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.distance)
}

// float speed = 15;
inline void SC_NOTI_USE_SKILL::clear_speed() {
  speed_ = 0;
}
inline float SC_NOTI_USE_SKILL::speed() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_USE_SKILL.speed)
  return speed_;
}
inline void SC_NOTI_USE_SKILL::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_USE_SKILL.speed)
}

// -------------------------------------------------------------------

// SC_NOTI_DESTROY_SKILL

// int64 skill_key = 1;
inline void SC_NOTI_DESTROY_SKILL::clear_skill_key() {
  skill_key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_DESTROY_SKILL::skill_key() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_DESTROY_SKILL.skill_key)
  return skill_key_;
}
inline void SC_NOTI_DESTROY_SKILL::set_skill_key(::google::protobuf::int64 value) {
  
  skill_key_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_DESTROY_SKILL.skill_key)
}

// int64 target_key = 2;
inline void SC_NOTI_DESTROY_SKILL::clear_target_key() {
  target_key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_DESTROY_SKILL::target_key() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_DESTROY_SKILL.target_key)
  return target_key_;
}
inline void SC_NOTI_DESTROY_SKILL::set_target_key(::google::protobuf::int64 value) {
  
  target_key_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_DESTROY_SKILL.target_key)
}

// float damage = 3;
inline void SC_NOTI_DESTROY_SKILL::clear_damage() {
  damage_ = 0;
}
inline float SC_NOTI_DESTROY_SKILL::damage() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_DESTROY_SKILL.damage)
  return damage_;
}
inline void SC_NOTI_DESTROY_SKILL::set_damage(float value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_DESTROY_SKILL.damage)
}

// -------------------------------------------------------------------

// CS_PING

// int64 timestamp = 1;
inline void CS_PING::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CS_PING::timestamp() const {
  // @@protoc_insertion_point(field_get:GAME.CS_PING.timestamp)
  return timestamp_;
}
inline void CS_PING::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_PING.timestamp)
}

// -------------------------------------------------------------------

// SC_PING

// int64 timestamp = 1;
inline void SC_PING::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_PING::timestamp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_PING.timestamp)
  return timestamp_;
}
inline void SC_PING::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_PING.timestamp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace GAME

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GAME_2eproto__INCLUDED
